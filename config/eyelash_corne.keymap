#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                              &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B      &kp C_MUTE              &kp DOWN              &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE                                                &lt 3 ENTER  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1     &kp COLON      &kp MINUS      &kp EQUAL         &kp EXCLAMATION                                &msc SCRL_UP                     &kp HOME       &kp N7        &kp N8        &kp N9        &kp END    &kp BSPC
&trans        &bt BT_CLR_ALL   &kp LESS_THAN  &kp PIPE       &kp GREATER_THAN  &kp HASH                       &msc SCRL_LEFT  &mkp LCLK       &msc SCRL_RIGHT  &kp PAGE_UP    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &kp SLASH
&trans        &rgb_ug RGB_OFF  &kp BACKSLASH  &kp AMPERSAND  &kp UNDERSCORE    &kp PERCENT      &kp C_MUTE                    &msc SCRL_DOWN                   &kp PAGE_DOWN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &kp ASTERISK
                                              &trans         &trans            &kp SPACE                                                                       &kp ENTER      &kp N0        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN  &kp RPAR  &kp BSPC
&trans     &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PERCENT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RBKT     &kp BSLH  &kp GRAVE
&trans     &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp DOLLAR   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RBRC     &kp PIPE  &kp TILDE
                                       &trans     &trans     &kp SPACE                                                             &kp RET      &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP_ARROW>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                              &mmv MOVE_UP                     &kp F6        &kp F7            &kp F8              &kp F9      &kp F10          &kp F11
&sys_reset      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &mkp RCLK   &kp PRINTSCREEN  &kp F12
&bootloader     &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_TOG                    &mmv MOVE_DOWN                   &trans        &trans            &bootloader         &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                                  &trans           &trans           &trans                                                                               &trans        &trans            &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
